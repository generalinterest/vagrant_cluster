#!sh
#on all nodes - masters and workers
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

sudo apt-get update

sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu kubelet=1.13.5-00 kubeadm=1.13.5-00 kubectl=1.13.5-00

sudo apt-mark hold docker-ce kubelet kubeadm kubectl

echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf

sudo sysctl -p

exit

On master 1 - what about other masters?

sudo kubeadm config images pull
sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address 192.168.50.2  --apiserver-cert-extra-sans="192.168.50.2" --apiserver-cert-extra-sans="localhost"
# maybe extra options?  sudo kubeadm init --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master 

https://github.com/kubernetes/kubeadm/issues/1031
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
Just wait for pods to start. No need to reboot or find how to restart the master services.

worker's
To add a new worker, get the cluster join command on the master with ..
 kubeadm token create --print-join-command
run join command with sudo
and from the mast get pods --all-namespaces and wait for services to start on the new workers

